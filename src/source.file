{
    "parserDefault" : "file",
    "formaterRules" : "./callbacks.js",

    "uses" : []
}

;;;

:qualifier = [#* #+ #? #,]

:specifier = #>

:typeSpecifier = [#@ #:]

:parentheses = [#( #)]
:brackets = [#[ #]]
:braces = [#{ #}]

:string = #' ![#'] #'

:word = [(#a to #z) (#A to #Z) #- #_]+

:not = #!

:and = #&
:or  = #|

:equal = #=
:colon = #:

;;;

file
    : file = type{types}*
type
    : type = typeSpecifier{name} word subtype{subtypes}*
subtype
    : subtype = equal pattern{pattern}
pattern
    : pattern = step{steps}*
step
    : step = rule{rule} key{key}? qualifier{qualifier}?
key
    : curleyKey = '{' word{key} '}'
    : squareKey = '[' word{key} ']'
rule
    : notRule = not rule{value}
    : typeRule = word{value}
    : valueRule = string{value}
    : patternRule = '(' pattern{value} ')'
    : andRule = '(' pattern{value} andBlock* ')'
    : orRule = '(' pattern{value} orBlock* ')'
andBlock
    : andBlock = '&' pattern{value}
    : orBlock = '|' pattern{value}
paramater
    : wordParam = word{value}
    : notParam = not word{value}
    : valParam = word{key} equal word{value}
value
    : stringVal = string{value}
    : numberVal = number{value}
