;tokens

open  = ('(' | '[' | '{')
close = (')' | ']' | '}')

not = '!'

equal = '='

and = '&'
or  = '|'

qualifier = ('*' | '+' | '?' | '^')

newline:skip = (\n | \r)
whitespace:skip = (\s | \t)

char:basic_char = ''' !newline '''
char:special_char = '\' !(newline | whitespace)

string:string = '"' !(newline | '"') '"'

word = (('a' to 'z') | ('A' to 'Z') | '_' | '-')+

comment:skip = "(*" !"*)"* "*)"

;parser

rule:not = not rule
rule:type = word[value]
rule:value = (char[value] | string[value])

step: = rule{rule} qualifier{qualifier}?

pattern: = step[steps]+

rule:or = '(' pattern[rules] (or pattern[rules])+ ')'
rule:and = '(' pattern[rules] (and pattern[rules])+ ')'

rule = '(' pattern{value} ')'

name: = word{type} (':' word{callback})?

type: = name{name} equal pattern{pattern}

(* word{type} (':' word{callback})? equal  *)